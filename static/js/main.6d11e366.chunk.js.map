{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/Input/IndexShape.js","components/Textarea/Textarea.js","components/Textarea/TextareaShape.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","PropTypes","string","isRequired","func","name","error","value","onBlurChecker","handleChange","titleName","placeholder","type","autoComplete","onBlur","onChange","Textarea","regString","initialState","errorTitle","errorImgUrl","errorImdbUrl","errorImdbId","NewMovie","state","handleSubmit","event","addMovie","props","newMovie","preventDefault","setState","target","checkURL","str","match","checkError","this","onSubmit","disabled","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d11e366.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport { InputShape } from './IndexShape';\n\nconst titleName = (name) => {\n  let title = '';\n\n  switch (name) {\n    case 'title':\n      title = `Title `;\n      break;\n    case 'imgUrl':\n      title = `Image logo `;\n      break;\n    case 'imdbUrl':\n      title = `IMDB logo `;\n      break;\n    case 'imdbId':\n      title = `ID on IMDB `;\n      break;\n    default:\n      break;\n  }\n\n  return title;\n};\n\nexport const Input = ({ name, error, value, onBlurChecker, handleChange }) => (\n  <p>\n    <label className=\"App__label\">\n      <span>\n        {titleName(name)}\n      </span>\n      <input\n        className={(error) ? 'App__input border' : 'App__input'}\n        placeholder=\"write title here\"\n        name={name}\n        type=\"text\"\n        value={value}\n        autoComplete=\"off\"\n        onBlur={onBlurChecker}\n        onChange={handleChange}\n      />\n    </label>\n    <div className=\"App__error\">\n      {error}\n    </div>\n  </p>\n);\n\nInput.propTypes = InputShape;\n","import PropTypes from 'prop-types';\n\nexport const InputShape = {\n  name: PropTypes.string.isRequired,\n  onBlurChecker: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { TextareaShape } from './TextareaShape';\n\nexport const Textarea = ({ value, handleChange }) => (\n  <p>\n    <label>\n      <textarea\n        className=\"App__textarea\"\n        placeholder=\"write description here\"\n        name=\"description\"\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n      />\n    </label>\n  </p>\n);\n\nTextarea.propTypes = TextareaShape;\n","import PropTypes from 'prop-types';\n\nexport const TextareaShape = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport { Textarea } from '../Textarea';\n\n// eslint-disable-next-line max-len\nconst regString = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  errorTitle: '',\n  errorImgUrl: '',\n  errorImdbUrl: '',\n  errorImdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = initialState;\n\n  handleSubmit = (event) => {\n    const { addMovie } = this.props;\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n    addMovie(newMovie);\n    this.setState(initialState);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    let error = '';\n\n    switch (name) {\n      case 'title':\n        error = 'errorTitle';\n        break;\n      case 'imgUrl':\n        error = 'errorImgUrl';\n        break;\n      case 'imdbUrl':\n        error = 'errorImdbUrl';\n        break;\n      case 'imdbId':\n        error = 'errorImdbId';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      [name]: value,\n      [error]: '',\n    });\n  };\n\n  checkURL = (str) => {\n    if (str.match(regString)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  checkError = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return !title || !imgUrl || !imdbUrl || !imdbId\n    || !this.checkURL(imgUrl) || !this.checkURL(imdbUrl);\n  };\n\n  onBlurChecker = (event) => {\n    let error = '';\n\n    if (event.target.name === 'imgUrl' || event.target.name === 'imdbUrl') {\n      if (\n        !this.checkURL(event.target.value)\n          || !event.target.value\n      ) {\n        error = 'Please write correct link (ex. https://...)';\n      } else {\n        error = '';\n      }\n\n      event.target.name === 'imgUrl'\n        ? this.setState({ errorImgUrl: error })\n        : this.setState({ errorImdbUrl: error });\n    } else {\n      if (!event.target.value) {\n        error = 'Please write something';\n      } else {\n        error = '';\n      }\n\n      event.target.name === 'title'\n        ? this.setState({ errorTitle: error })\n        : this.setState({ errorImdbId: error });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorTitle,\n      errorImgUrl,\n      errorImdbUrl,\n      errorImdbId,\n    } = this.state;\n\n    return (\n      <div className=\"App__form\">\n        <form\n          className=\"form-group\"\n          onSubmit={this.handleSubmit}\n        >\n          <Input\n            name=\"title\"\n            value={title}\n            error={errorTitle}\n            onBlurChecker={this.onBlurChecker}\n            handleChange={this.handleChange}\n          />\n          <Textarea\n            value={description}\n            handleChange={this.handleChange}\n          />\n          <Input\n            name=\"imgUrl\"\n            value={imgUrl}\n            error={errorImgUrl}\n            onBlurChecker={this.onBlurChecker}\n            handleChange={this.handleChange}\n          />\n          <Input\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            error={errorImdbUrl}\n            onBlurChecker={this.onBlurChecker}\n            handleChange={this.handleChange}\n          />\n          <Input\n            name=\"imdbId\"\n            value={imdbId}\n            error={errorImdbId}\n            onBlurChecker={this.onBlurChecker}\n            handleChange={this.handleChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"App__button\"\n            disabled={this.checkError()}\n          >\n            Add movie!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}