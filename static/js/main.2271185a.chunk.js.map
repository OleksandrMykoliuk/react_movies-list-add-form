{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","initialState","errorTitle","errorImgUrl","errorImdbUrl","errorImdbId","NewMovie","state","handleSubmit","event","addMovie","props","newMovie","preventDefault","setState","handleChange","target","name","value","error","checkURL","str","match","this","onSubmit","placeholder","type","autoComplete","onBlur","onChange","disabled","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2271185a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  errorTitle: '',\n  errorImgUrl: '',\n  errorImdbUrl: '',\n  errorImdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = initialState;\n\n  handleSubmit = (event) => {\n    const { addMovie } = this.props;\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n    addMovie(newMovie);\n    this.setState(initialState);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    let error = '';\n\n    // eslint-disable-next-line default-case\n    switch (name) {\n      case 'title':\n        error = 'errorTitle';\n        break;\n      case 'imgUrl':\n        error = 'errorImgUrl';\n        break;\n      case 'imdbUrl':\n        error = 'errorImdbUrl';\n        break;\n      case 'imdbId':\n        error = 'errorImdbId';\n        break;\n    }\n\n    this.setState({\n      [name]: value,\n      [error]: '',\n    });\n  };\n\n  checkURL = (str) => {\n    // eslint-disable-next-line max-len\n    if (!str.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorTitle,\n      errorImgUrl,\n      errorImdbUrl,\n      errorImdbId,\n    } = this.state;\n\n    return (\n      <div className=\"App__form\">\n        <form\n          className=\"form-group\"\n          onSubmit={this.handleSubmit}\n        >\n\n          <label className=\"App__label\">\n            <span>\n              {`Title `}\n            </span>\n            <input\n              className={(errorTitle) ? 'App__input border' : 'App__input'}\n              placeholder=\"write title here\"\n              name=\"title\"\n              type=\"text\"\n              value={title}\n              autoComplete=\"off\"\n              onBlur={(event) => {\n                let error = '';\n\n                if (!event.target.value) {\n                  error = 'Please write title of the movie';\n                } else {\n                  error = '';\n                }\n\n                this.setState({ errorTitle: error });\n              }}\n              onChange={this.handleChange}\n            />\n          </label>\n          <div className=\"App__error\">\n            {errorTitle}\n          </div>\n          <p>\n            <label>\n              <textarea\n                className=\"App__textarea\"\n                placeholder=\"write description here\"\n                name=\"description\"\n                type=\"text\"\n                value={description}\n                onChange={this.handleChange}\n              />\n            </label>\n          </p>\n          <p>\n            <label className=\"App__label\">\n              <span>\n                {`Image logo `}\n              </span>\n              <input\n                className={(errorImgUrl) ? 'App__input border' : 'App__input'}\n                placeholder=\"put link for cover here\"\n                name=\"imgUrl\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={imgUrl}\n                onBlur={(event) => {\n                  let error = '';\n\n                  if (\n                    !this.checkURL(event.target.value)\n                      || !event.target.value\n                  ) {\n                    error = 'Please write correct link (ex. https://...)';\n                  } else {\n                    error = '';\n                  }\n\n                  this.setState({ errorImgUrl: error });\n                }}\n                onChange={this.handleChange}\n              />\n            </label>\n            <div className=\"App__error\">\n              {errorImgUrl}\n            </div>\n          </p>\n          <p>\n            <label className=\"App__label\">\n              <span>\n                {`IMDB logo `}\n              </span>\n              <input\n                className={(errorImdbUrl) ? 'App__input border' : 'App__input'}\n                placeholder=\"put link of IMDB logo here\"\n                name=\"imdbUrl\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={imdbUrl}\n                onBlur={(event) => {\n                  let error = '';\n\n                  if (\n                    !event.target.value\n                    || !this.checkURL(event.target.value)\n                  ) {\n                    error = 'Please write correct link (ex. https://...)';\n                  } else {\n                    error = '';\n                  }\n\n                  this.setState({ errorImdbUrl: error });\n                }}\n                onChange={this.handleChange}\n              />\n            </label>\n            <div className=\"App__error\">\n              {errorImdbUrl}\n            </div>\n          </p>\n          <p>\n            <label className=\"App__label\">\n              <span>\n                {`ID on IMDB `}\n              </span>\n              <input\n                className={(errorImdbId) ? 'App__input border' : 'App__input'}\n                placeholder=\"write id of this movie\"\n                name=\"imdbId\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={imdbId}\n                onBlur={(event) => {\n                  let error = '';\n\n                  if (!event.target.value) {\n                    error = 'Please write correct ID';\n                  } else {\n                    error = '';\n                  }\n\n                  this.setState({ errorImdbId: error });\n                }}\n                onChange={this.handleChange}\n              />\n            </label>\n            <div className=\"App__error\">\n              {errorImdbId}\n            </div>\n          </p>\n          {\n            (\n              !title || !imgUrl || !imdbUrl || !imdbId\n              || !this.checkURL(imgUrl) || !this.checkURL(imdbUrl)\n            )\n              ? (\n                <button\n                  type=\"submit\"\n                  className=\"App__button\"\n                  disabled\n                >\n                  Add movie!\n                </button>\n              )\n              : (\n                <button\n                  type=\"submit\"\n                  className=\"App__button\"\n                >\n                  Add movie!\n                </button>\n              )\n          }\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}